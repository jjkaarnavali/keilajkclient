{"version":3,"sources":["types/EPageStatus.ts","components/Footer.tsx","context/AppContext.ts","components/Header.tsx","configuration.ts","services/base-service.ts","containers/product-types/ProductTypeCreate1.tsx","components/Alert.tsx","containers/product-types/ProductTypeDelete.tsx","components/Loader.tsx","containers/product-types/ProductTypeDetails.tsx","containers/product-types/ProductTypeEdit.tsx","containers/product-types/ProductTypeIndex.tsx","containers/payment-types/PaymentTypeCreate.tsx","containers/payment-types/PaymentTypeDelete.tsx","containers/payment-types/PaymentTypeDetails.tsx","containers/payment-types/PaymentTypeEdit.tsx","containers/payment-types/PaymentTypeIndex.tsx","containers/persons/PersonCreate.tsx","containers/persons/PersonDelete.tsx","containers/persons/PersonDetails.tsx","containers/persons/PersonEdit.tsx","containers/persons/PersonIndex.tsx","containers/home/HomeIndex.tsx","services/identity-service.ts","containers/identity/Login.tsx","containers/identity/Register.tsx","containers/Page404.tsx","containers/PageForm.tsx","App.tsx","index.tsx"],"names":["EPageStatus","Footer","className","initialAppState","jwt","firstName","lastName","setAuthInfo","AppContext","React","createContext","AppContextProvider","Provider","Header","Consumer","appState","useContext","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","ApiBaseUrl","BaseService","headers","Authorization","apiEndpoint","this","axios","get","getAxiosConfiguration","response","ok","status","statusCode","data","error","messages","id","entity","console","log","post","url","put","delete","Axios","create","baseURL","EAlertClass","ProductTypeCreate","useState","objToCreate","setProductType","pageStatus","Loading","setPageStatus","setAlertMessage","createClicked","e","a","preventDefault","typeName","result","OK","Error","onSubmit","nativeEvent","htmlFor","value","onChange","target","ProductTypeDelete","useParams","productType","deleteClicked","loadData","useEffect","Loader","props","role","ProductTypeDetails","ProductTypeEdit","objToEdit","editClicked","v-model","RowDisplay","ProductTypeIndex","productTypes","setProductTypes","getAll","map","PaymentTypeCreate","setPaymentType","paymentTypeName","PaymentTypeDelete","paymentType","PaymentTypeDetails","PaymentTypeEdit","PaymentTypeIndex","paymentTypes","setPaymentTypes","PersonCreate","setPerson","personsIdCode","PersonDelete","person","PersonDetails","PersonEdit","PersonIndex","persons","setPersons","HomeIndex","Alert","show","alertClass","message","IdentityService","loginData","loginDataJson","JSON","stringify","registerData","registerDataJson","Login","email","password","setLoginData","alertMessage","logInClicked","token","firstname","lastname","Danger","name","placeholder","autoComplete","Register","userlevel","setRegisterData","registerClicked","Page404","FormView","values","input","handleChange","checked","checkbox","radio","textarea","rows","select","initialFormValues","PageForm","formValues","setFormValues","App","setAppState","exact","path","component","ProductTypeCreate1","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.176dff48.chunk.js","sourcesContent":["export enum EPageStatus {\r\n    Loading = \"Loading...\",\r\n    Error = \"Error...\",\r\n    OK = \"Ok\",\r\n}\r\n","const Footer = () => {\r\n    return (\r\n        <footer className=\"border-top footer text-muted\">\r\n            <div className=\"container\">\r\n                &copy; 2021 - React Demo\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nexport interface IAppState {\r\n    jwt: string | null;\r\n    firstName: string;\r\n    lastName: string;\r\n    setAuthInfo: (jwt: string | null, firstName: string, lastName: string) => void;\r\n}\r\n\r\nexport const initialAppState : IAppState = {\r\n    jwt: null,\r\n    firstName: '',\r\n    lastName: '',\r\n    setAuthInfo: (jwt: string | null, firstName: string, lastName: string): void => {}\r\n}\r\n\r\nexport const AppContext = React.createContext<IAppState>(initialAppState);\r\nexport const AppContextProvider = AppContext.Provider;\r\nexport const AppContextConsumer = AppContext.Consumer;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst Header = () => {\r\n    const appState = useContext(AppContext);\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">React Demo</NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"navbar-collapse collapse d-sm-inline-flex justify-content-between\">\r\n                        <ul className=\"navbar-nav flex-grow-1\">\r\n\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-dark\" to=\"/ProductTypes\">ProductTypes</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-dark\" to=\"/PaymentTypes\">PaymentTypes</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-dark\" to=\"/Persons\">Persons</NavLink>\r\n                            </li>\r\n\r\n                            {/* <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle text-dark\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Languages</a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <a className=\"dropdown-item text-dark\" href=\"/Home/SetLanguage?culture=et&amp;returnUrl=%2F\">eesti</a>\r\n                                    <a className=\"dropdown-item text-dark\" href=\"/Home/SetLanguage?culture=en-GB&amp;returnUrl=%2F\">English (United Kingdom)</a>\r\n                                </div>\r\n                            </li> */}\r\n\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            {appState.jwt === null ?\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link text-dark\" to=\"/identity/login\">Login</NavLink>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-dark\" to=\"/identity/register\">Register</NavLink>\r\n                                </li>\r\n                                </>\r\n\r\n                                :\r\n                                <>\r\n                                    <li className=\"nav-item\">\r\n                                        <span className=\"nav-link text-dark\">{appState.firstName + ' ' + appState.lastName}</span>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <button onClick={() => appState.setAuthInfo(null, '','')} className=\"btn btn-link nav-link text-dark\" >Logout</button>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","export const ApiBaseUrl = \"https://jakaar.azurewebsites.net/api/v1\";\r\n","import Axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IMessages } from '../types/IMessages';\r\n\r\n\r\nexport interface IEntityId {\r\n    id: string | undefined;\r\n}\r\nexport abstract class BaseService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    protected static getAxiosConfiguration(jwt?: string): AxiosRequestConfig | undefined {\r\n        if (!jwt) return undefined;\r\n        const config: AxiosRequestConfig = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        };  \r\n        return config;      \r\n    }\r\n\r\n    static async getAll<TEntity>(apiEndpoint: string, jwt?: string): Promise<IFetchResponse<TEntity[]>> {\r\n        try {\r\n\r\n            let response = await this.axios.get<TEntity[]>(apiEndpoint, BaseService.getAxiosConfiguration(jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static async get<TEntity>(id: string, apiEndpoint: string, jwt?: string): Promise<IFetchResponse<TEntity>> {\r\n        try {\r\n\r\n            apiEndpoint = apiEndpoint + '/' + id;\r\n            let response = await this.axios.get<TEntity>(apiEndpoint, BaseService.getAxiosConfiguration(jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as TEntity\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static async post<TEntity>(entity: TEntity, apiEndpoint: string, jwt?: string): Promise<IFetchResponse<TEntity>> {\r\n        try {\r\n\r\n            console.log(entity);\r\n            console.log(jwt);\r\n            console.log(\"joudis servicesse\");\r\n            let response = await this.axios.post<TEntity>(apiEndpoint, entity, BaseService.getAxiosConfiguration(jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as TEntity\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static async put<TEntity extends IEntityId>(entity: TEntity, apiEndpoint: string, jwt?: string): Promise<IFetchResponse<TEntity>> {\r\n        let url = apiEndpoint;\r\n        url = url + '/' + entity.id;\r\n        try {\r\n            const response = await this.axios.put(url, entity, BaseService.getAxiosConfiguration(jwt));\r\n            \r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as TEntity\r\n            };\r\n            \r\n        } catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async delete<TEntity>(id: string,  apiEndpoint: string, jwt?: string): Promise<IFetchResponse<TEntity>> {\r\n        let url = apiEndpoint;\r\n        url = url + '/' + id;\r\n\r\n\r\n        try {\r\n            const response = await this.axios.delete(url, BaseService.getAxiosConfiguration(jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as undefined\r\n            };\r\n        } catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Redirect, useParams } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IProductType } from \"../../dto/IProductType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ProductTypeIndex from \"./ProductTypeIndex\";\r\n\r\nconst ProductTypeCreate = () => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const [objToCreate, setProductType] = useState({} as IProductType);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const createClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (objToCreate.typeName === '') {\r\n            setAlertMessage('Empty typename!');\r\n        };\r\n        setAlertMessage('');\r\n        let result = await BaseService.post<IProductType>(objToCreate, '/producttypes', appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setProductType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Create</h1>\r\n\r\n        <h4>Product type</h4>\r\n        <hr />\r\n        <form onSubmit={(e) => createClicked(e.nativeEvent)}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"typeName\">Product type</label>\r\n                    <input\r\n                        value={objToCreate.typeName} onChange={e => setProductType({ ...objToCreate, typeName: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"typeName\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Create\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </form>\r\n        <div>\r\n            <Link to={'/ProductTypes/'}>Back to List</Link> \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductTypeCreate;\r\n","export enum EAlertClass {\r\n    Primary = 'alert-primary',\r\n    Secondary = 'alert-secondary',\r\n    Success = 'alert-success',\r\n    Danger = 'alert-danger',\r\n    Warning = 'alert-warning',\r\n    Info = 'alert-info',\r\n    Light = 'alert-light',\r\n    Dark = 'alert-dark',\r\n}\r\n\r\nconst Alert = (props: {show: boolean, message: string, alertClass: EAlertClass }) => {\r\n    \r\n    return props.show ? <div className={'alert ' + props.alertClass} role=\"alert\">{props.message}</div> : null;\r\n}\r\n\r\nexport default Alert;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IProductType } from \"../../dto/IProductType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst ProductTypeDelete = () => {\r\n    const {id} = useParams() as IRouteId; \r\n    const [productType, setProductType] = useState({} as IProductType);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n    const deleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        \r\n        let result = await BaseService.delete<IProductType>(id, '/producttypes', appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setProductType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n        return (\r\n            <>\r\n            {<Redirect to=\"/ProductTypes/\" />}\r\n            </>\r\n        );\r\n        \r\n    }\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IProductType>(id, '/producttypes', appState.jwt!);\r\n\r\n    \r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setProductType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        console.log(productType);\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n        <h1>Delete</h1>\r\n\r\n        <h3>Are you sure you want to delete this?</h3>\r\n        <div>\r\n            <h4>Payment Type</h4>\r\n            <hr />\r\n            <dl className=\"row\">\r\n                <dt className = \"col-sm-2\">\r\n                    Payment Type\r\n                </dt>\r\n                <dd className = \"col-sm-10\">\r\n                    {productType.typeName}  \r\n                </dd>\r\n            </dl>\r\n\r\n            <form onSubmit={(e) => deleteClicked(e.nativeEvent)}>\r\n                <button  type=\"submit\" className=\"btn btn-danger\" >Delete</button>|\r\n                <Link to={'/ProductTypes/'}>Back to List</Link> \r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductTypeDelete;\r\n","import { EPageStatus } from \"../types/EPageStatus\";\r\n\r\nconst Loader = (props: {pageStatus:EPageStatus, statusCode:  number}) => {\r\n    if (props.pageStatus === EPageStatus.Loading){\r\n        return <div className=\"alert alert-primary\" role=\"alert\">Loading...</div>;\r\n    }\r\n    if (props.pageStatus === EPageStatus.Error) {\r\n        return <div className=\"alert alert-danger\" role=\"alert\">Error... {props.statusCode}</div>\r\n    }\r\n    return <></>;\r\n}\r\n\r\nexport default Loader;\r\n","import { useParams } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IProductType } from \"../../dto/IProductType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\n\r\n\r\nconst ProductTypeDetails = () => {\r\n    // get the router params from hook\r\n    const {id} = useParams() as IRouteId; \r\n    const [productType, setProductType] = useState({} as IProductType);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IProductType>(id, '/producttypes', appState.jwt!);\r\n\r\n    \r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setProductType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        console.log(productType);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Details</h1>\r\n            <div>\r\n            <h4>Product Type</h4>\r\n            <hr />\r\n            <dl className=\"row\" >\r\n            <dt className=\"col-sm-4\">\r\n                Product type\r\n            </dt>\r\n            <dd className=\"col-sm-8\">\r\n                {productType.typeName}\r\n            </dd>\r\n            <dt className=\"col-sm-4\">\r\n                Id\r\n            </dt>\r\n            <dd className=\"col-sm-8\">\r\n                {productType.id}\r\n            </dd>\r\n            </dl>\r\n            </div>\r\n            <div>\r\n                <Link to={'/ProductTypes/Edit/' + productType.id}>Edit </Link> \r\n            |   <Link to={'/ProductTypes/'}>Back to List</Link> \r\n            </div>\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductTypeDetails;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IProductType } from \"../../dto/IProductType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst ProductTypeEdit = () => {\r\n    const {id} = useParams() as IRouteId; \r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [objToEdit, setProductType] = useState({} as IProductType);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n    const editClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (objToEdit.typeName === '') {\r\n            setAlertMessage('Empty typename!');\r\n        };\r\n        setAlertMessage('');\r\n        let result = await BaseService.put<IProductType>(objToEdit, '/producttypes', appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setProductType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IProductType>(id, '/producttypes', appState.jwt!);\r\n\r\n    \r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setProductType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n        <h1>Edit</h1>\r\n\r\n        <h4>Product type</h4>\r\n        <hr />\r\n        <form onSubmit={(e) => editClicked(e.nativeEvent)}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"typeName\">Product type</label>\r\n                    <input\r\n                        value={objToEdit.typeName} onChange={e => setProductType({ ...objToEdit, typeName: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        v-model={objToEdit.typeName}\r\n                        id=\"typeName\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </form>\r\n        <div>\r\n            <Link to={'/ProductTypes/'}>Back to List</Link> \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductTypeEdit;\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IProductType } from \"../../dto/IProductType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\n\r\nconst RowDisplay = (props: { productType: IProductType }) => (\r\n    <tr>\r\n        <td>\r\n            {props.productType.typeName}\r\n        </td>\r\n        <td>\r\n            <Link to={'/ProductTypes/' + props.productType.id}>Details </Link> \r\n            | <Link to={'/ProductTypes/Edit/' + props.productType.id}>Edit </Link> \r\n            | <Link to={'/ProductTypes/Delete/' + props.productType.id}>Delete </Link>\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst ProductTypeIndex = () => {\r\n    const [productTypes, setProductTypes] = useState([] as IProductType[]);\r\n\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const appState = useContext(AppContext);\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IProductType>('/producttypes', appState.jwt!);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setProductTypes(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>ProductTypes</h1>\r\n            <Link to={'/ProductTypes/Create'}>Create new</Link> \r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            ProductType\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {productTypes.map(productType =>\r\n                        <RowDisplay productType={productType} key={productType.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductTypeIndex;\r\n","import { Redirect, useParams } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPaymentType } from \"../../dto/IPaymentType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PaymentTypeIndex from \"./PaymentTypeIndex\";\r\n\r\nconst PaymentTypeCreate = () => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const [objToCreate, setPaymentType] = useState({} as IPaymentType);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const createClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (objToCreate.paymentTypeName === '') {\r\n            setAlertMessage('Empty typename!');\r\n        };\r\n        setAlertMessage('');\r\n        let result = await BaseService.post<IPaymentType>(objToCreate, '/paymenttypes', appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPaymentType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Create</h1>\r\n\r\n        <h4>Payment type</h4>\r\n        <hr />\r\n        <form onSubmit={(e) => createClicked(e.nativeEvent)}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"typeName\">Payment type</label>\r\n                    <input\r\n                        value={objToCreate.paymentTypeName} onChange={e => setPaymentType({ ...objToCreate, paymentTypeName: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"typeName\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Create\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </form>\r\n        <div>\r\n            <Link to={'/PaymentTypes/'}>Back to List</Link> \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaymentTypeCreate;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPaymentType } from \"../../dto/IPaymentType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PaymentTypeDelete = () => {\r\n    const {id} = useParams() as IRouteId; \r\n    const [paymentType, setPaymentType] = useState({} as IPaymentType);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n    const deleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        \r\n        let result = await BaseService.delete<IPaymentType>(id, '/paymenttypes', appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPaymentType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n        return (\r\n            <>\r\n            {<Redirect to=\"/ProductTypes/\" />}\r\n            </>\r\n        );\r\n        \r\n    }\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IPaymentType>(id, '/paymenttypes', appState.jwt!);\r\n\r\n    \r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPaymentType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        console.log(paymentType);\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n        <h1>Delete</h1>\r\n\r\n        <h3>Are you sure you want to delete this?</h3>\r\n        <div>\r\n            <h4>Payment Type</h4>\r\n            <hr />\r\n            <dl className=\"row\">\r\n                <dt className = \"col-sm-2\">\r\n                    Payment Type\r\n                </dt>\r\n                <dd className = \"col-sm-10\">\r\n                    {paymentType.paymentTypeName}  \r\n                </dd>\r\n            </dl>\r\n\r\n            <form onSubmit={(e) => deleteClicked(e.nativeEvent)}>\r\n                <button  type=\"submit\" className=\"btn btn-danger\" >Delete</button>|\r\n                <Link to={'/PaymentTypes/'}>Back to List</Link> \r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaymentTypeDelete;\r\n","import { useParams } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPaymentType } from \"../../dto/IPaymentType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\n\r\n\r\nconst PaymentTypeDetails = () => {\r\n    // get the router params from hook\r\n    const {id} = useParams() as IRouteId; \r\n    const [paymentType, setPaymentType] = useState({} as IPaymentType);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IPaymentType>(id, '/paymenttypes', appState.jwt!);\r\n\r\n    \r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPaymentType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        console.log(paymentType);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Details</h1>\r\n            <div>\r\n            <h4>Payment Type</h4>\r\n            <hr />\r\n            <dl className=\"row\" >\r\n            <dt className=\"col-sm-4\">\r\n                Payment type\r\n            </dt>\r\n            <dd className=\"col-sm-8\">\r\n                {paymentType.paymentTypeName}\r\n            </dd>\r\n            <dt className=\"col-sm-4\">\r\n                Id\r\n            </dt>\r\n            <dd className=\"col-sm-8\">\r\n                {paymentType.id}\r\n            </dd>\r\n            </dl>\r\n            </div>\r\n            <div>\r\n                <Link to={'/PaymentTypes/Edit/' + paymentType.id}>Edit </Link> \r\n            |   <Link to={'/PaymentTypes/'}>Back to List</Link> \r\n            </div>\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaymentTypeDetails;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPaymentType } from \"../../dto/IPaymentType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PaymentTypeEdit = () => {\r\n    const {id} = useParams() as IRouteId; \r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [objToEdit, setPaymentType] = useState({} as IPaymentType);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n    const editClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (objToEdit.paymentTypeName === '') {\r\n            setAlertMessage('Empty typename!');\r\n        };\r\n        setAlertMessage('');\r\n        let result = await BaseService.put<IPaymentType>(objToEdit, '/paymenttypes', appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPaymentType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IPaymentType>(id, '/paymenttypes', appState.jwt!);\r\n\r\n    \r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPaymentType(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n        <h1>Edit</h1>\r\n\r\n        <h4>Payment type</h4>\r\n        <hr />\r\n        <form onSubmit={(e) => editClicked(e.nativeEvent)}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"typeName\">Payment type</label>\r\n                    <input\r\n                        value={objToEdit.paymentTypeName} onChange={e => setPaymentType({ ...objToEdit, paymentTypeName: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        v-model={objToEdit.paymentTypeName}\r\n                        id=\"typeName\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </form>\r\n        <div>\r\n            <Link to={'/PaymentTypes/'}>Back to List</Link> \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaymentTypeEdit;\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPaymentType } from \"../../dto/IPaymentType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\n\r\nconst RowDisplay = (props: { paymentType: IPaymentType }) => (\r\n    <tr>\r\n        <td>\r\n            {props.paymentType.paymentTypeName}\r\n        </td>\r\n        <td>\r\n            <Link to={'/PaymentTypes/' + props.paymentType.id}>Details </Link> \r\n            | <Link to={'/PaymentTypes/Edit/' + props.paymentType.id}>Edit </Link> \r\n            | <Link to={'/PaymentTypes/Delete/' + props.paymentType.id}>Delete </Link>\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst PaymentTypeIndex = () => {\r\n    const [paymentTypes, setPaymentTypes] = useState([] as IPaymentType[]);\r\n\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const appState = useContext(AppContext);\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IPaymentType>('/paymenttypes', appState.jwt!);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPaymentTypes(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>PaymentTypes</h1>\r\n            <Link to={'/PaymentTypes/Create'}>Create new</Link> \r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            PaymentType\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {paymentTypes.map(paymentType =>\r\n                        <RowDisplay paymentType={paymentType} key={paymentType.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaymentTypeIndex;\r\n","import { Redirect, useParams } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPerson } from \"../../dto/IPerson\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PersonsIndex from \"./PersonIndex\";\r\n\r\nconst PersonCreate = () => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const [objToCreate, setPerson] = useState({} as IPerson);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const createClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (objToCreate.firstName === '' || objToCreate.lastName === '' || objToCreate.personsIdCode === '') {\r\n            setAlertMessage('First name, last name and persons ID code cant be empty!');\r\n        };\r\n        setAlertMessage('');\r\n        let result = await BaseService.post<IPerson>(objToCreate, '/persons', appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPerson(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Create</h1>\r\n\r\n        <h4>Person</h4>\r\n        <hr />\r\n        <form onSubmit={(e) => createClicked(e.nativeEvent)}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\">First name</label>\r\n                    <input\r\n                        value={objToCreate.firstName} onChange={e => setPerson({ ...objToCreate, firstName: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"firstName\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"lastName\">Last name</label>\r\n                    <input\r\n                        value={objToCreate.lastName} onChange={e => setPerson({ ...objToCreate, lastName: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"lastName\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"idCode\">ID code</label>\r\n                    <input\r\n                        value={objToCreate.personsIdCode} onChange={e => setPerson({ ...objToCreate, personsIdCode: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"idCode\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Create\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </form>\r\n        <div>\r\n            <Link to={'/Persons/'}>Back to List</Link> \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PersonCreate;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPerson } from \"../../dto/IPerson\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PersonDelete = () => {\r\n    const {id} = useParams() as IRouteId; \r\n    const [person, setPerson] = useState({} as IPerson);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n    const deleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        \r\n        let result = await BaseService.delete<IPerson>(id, '/persons', appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPerson(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n        return (\r\n            <>\r\n            {<Redirect to=\"/Persons/\" />}\r\n            </>\r\n        );\r\n        \r\n    }\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IPerson>(id, '/persons', appState.jwt!);\r\n\r\n    \r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPerson(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        console.log(person);\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n        <h1>Delete</h1>\r\n\r\n        <h3>Are you sure you want to delete this?</h3>\r\n        <div>\r\n            <h4>Person</h4>\r\n            <hr />\r\n            <dl className=\"row\">\r\n                <dt className = \"col-sm-2\">\r\n                    First Name\r\n                </dt>\r\n                <dd className = \"col-sm-10\">\r\n                    {person.firstName}  \r\n                </dd>\r\n                <dt className = \"col-sm-2\">\r\n                    Last Name\r\n                </dt>\r\n                <dd className = \"col-sm-10\">\r\n                    {person.lastName}  \r\n                </dd>\r\n                <dt className = \"col-sm-2\">\r\n                    ID code\r\n                </dt>\r\n                <dd className = \"col-sm-10\">\r\n                    {person.personsIdCode}  \r\n                </dd>\r\n            </dl>\r\n\r\n            <form onSubmit={(e) => deleteClicked(e.nativeEvent)}>\r\n                <button  type=\"submit\" className=\"btn btn-danger\" >Delete</button>|\r\n                <Link to={'/Persons/'}>Back to List</Link> \r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PersonDelete;\r\n","import { useParams } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPerson } from \"../../dto/IPerson\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\n\r\n\r\nconst PersonDetails = () => {\r\n    // get the router params from hook\r\n    const {id} = useParams() as IRouteId; \r\n    const [person, setPerson] = useState({} as IPerson);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IPerson>(id, '/persons', appState.jwt!);\r\n\r\n    \r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPerson(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        console.log(person);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Details</h1>\r\n            <div>\r\n            <h4>Person</h4>\r\n            <hr />\r\n            <dl className=\"row\" >\r\n            <dt className=\"col-sm-4\">\r\n                First Name\r\n            </dt>\r\n            <dd className=\"col-sm-8\">\r\n                {person.firstName}\r\n            </dd>\r\n            <dt className=\"col-sm-4\">\r\n                Last Name\r\n            </dt>\r\n            <dd className=\"col-sm-8\">\r\n                {person.lastName}\r\n            </dd>\r\n            <dt className=\"col-sm-4\">\r\n                ID code\r\n            </dt>\r\n            <dd className=\"col-sm-8\">\r\n                {person.personsIdCode}\r\n            </dd>\r\n            <dt className=\"col-sm-4\">\r\n                Id\r\n            </dt>\r\n            <dd className=\"col-sm-8\">\r\n                {person.id}\r\n            </dd>\r\n            </dl>\r\n            </div>\r\n            <div>\r\n                <Link to={'/Persons/Edit/' + person.id}>Edit </Link> \r\n            |   <Link to={'/Persons/'}>Back to List</Link> \r\n            </div>\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PersonDetails;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPerson } from \"../../dto/IPerson\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PersonEdit = () => {\r\n    const {id} = useParams() as IRouteId; \r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [objToEdit, setPerson] = useState({} as IPerson);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n    const editClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (objToEdit.firstName === '' || objToEdit.lastName === '' || objToEdit.personsIdCode === '') {\r\n            setAlertMessage('First name, last name and persons ID code cant be empty!');\r\n        };\r\n        setAlertMessage('');\r\n        let result = await BaseService.put<IPerson>(objToEdit, '/persons', appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPerson(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IPerson>(id, '/persons', appState.jwt!);\r\n\r\n    \r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPerson(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n        <h1>Edit</h1>\r\n\r\n        <h4>Person</h4>\r\n        <hr />\r\n        <form onSubmit={(e) => editClicked(e.nativeEvent)}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input\r\n                        value={objToEdit.firstName} onChange={e => setPerson({ ...objToEdit, firstName: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        v-model={objToEdit.firstName}\r\n                        id=\"firstName\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input\r\n                        value={objToEdit.lastName} onChange={e => setPerson({ ...objToEdit, lastName: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        v-model={objToEdit.lastName}\r\n                        id=\"lastName\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"idCode\">ID code</label>\r\n                    <input\r\n                        value={objToEdit.personsIdCode} onChange={e => setPerson({ ...objToEdit, personsIdCode: e.target.value })}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        v-model={objToEdit.personsIdCode}\r\n                        id=\"idCode\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </form>\r\n        <div>\r\n            <Link to={'/Persons/'}>Back to List</Link> \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PersonEdit;\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IPerson } from \"../../dto/IPerson\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\n\r\nconst RowDisplay = (props: { person: IPerson }) => (\r\n    <tr>\r\n        <td>\r\n            {props.person.firstName}\r\n        </td>\r\n        <td>\r\n            {props.person.lastName}\r\n        </td>\r\n        <td>\r\n            {props.person.personsIdCode}\r\n        </td>\r\n        <td>\r\n            <Link to={'/Persons/' + props.person.id}>Details </Link> \r\n            | <Link to={'/Persons/Edit/' + props.person.id}>Edit </Link> \r\n            | <Link to={'/Persons/Delete/' + props.person.id}>Delete </Link>\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst PersonIndex = () => {\r\n    const [persons, setPersons] = useState([] as IPerson[]);\r\n\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const appState = useContext(AppContext);\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IPerson>('/persons', appState.jwt!);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setPersons(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Persons</h1>\r\n            <Link to={'/Persons/Create'}>Create new</Link> \r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            First Name\r\n                        </th>\r\n                        <th>\r\n                            Last Name\r\n                        </th>\r\n                        <th>\r\n                            ID code\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {persons.map(person =>\r\n                        <RowDisplay person={person} key={person.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PersonIndex;\r\n","const HomeIndex = () => {\r\n    return (\r\n        <div>HomeIndex</div>\r\n    );\r\n}\r\n\r\nexport default HomeIndex;\r\n","import { ILoginResponse } from './../types/ILoginResponse';\r\nimport Axios, { AxiosError } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IMessages } from '../types/IMessages';\r\n\r\nexport abstract class IdentityService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    static async Login(apiEndpoint: string, loginData: {email: string, password:string}): Promise<IFetchResponse<ILoginResponse>> {\r\n        let loginDataJson = JSON.stringify(loginData);\r\n        try {\r\n            let response = await this.axios.post<ILoginResponse>(apiEndpoint, loginDataJson);\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static async Register(apiEndpoint: string, registerData: {email: string, password:string, firstname:string, lastname:string, userlevel:string}): Promise<IFetchResponse<ILoginResponse>> {\r\n        let registerDataJson = JSON.stringify(registerData);\r\n        try {\r\n            let response = await this.axios.post<ILoginResponse>(apiEndpoint, registerDataJson);\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IdentityService } from \"../../services/identity-service\";\r\n\r\nconst Login = () => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const [loginData, setLoginData] = useState({ email: '', password: '' });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const logInClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (loginData.email === '' || loginData.password === '') {\r\n            setAlertMessage('Empty email or pawwsord!');\r\n        };\r\n        setAlertMessage('');\r\n        let response = await IdentityService.Login('account/login', loginData);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            appState.jwt = response.data!.token;\r\n            appState.firstName = response.data!.firstname;\r\n            appState.lastName = response.data!.lastname;\r\n            appState.setAuthInfo(response.data!.token, response.data!.firstname, response.data!.lastname);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { appState.jwt !== null ? <Redirect to=\"/\" /> : null}\r\n            <h1>Log in</h1>\r\n            <form onSubmit={(e) => logInClicked(e.nativeEvent)}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Email\">Email</label>\r\n                                <input value={loginData.email} onChange={e => setLoginData({ ...loginData, email: e.target.value })} className=\"form-control\" type=\"email\" id=\"Input_Email\" name=\"Input.Email\" placeholder=\"user@example.com\"  autoComplete=\"username\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Password\">Password</label>\r\n                                <input value={loginData.password} onChange={e => setLoginData({ ...loginData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" placeholder=\"Input your current password...\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => logInClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Log in</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IdentityService } from \"../../services/identity-service\";\r\n\r\nconst Register = () => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const [registerData, setRegisterData] = useState({ email: '', password: '', firstname: '', lastname: '', userlevel: ''});\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const registerClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (registerData.email === '' || registerData.password === '' || registerData.firstname === '' || registerData.lastname === '' || registerData.userlevel === '') {\r\n            setAlertMessage('Empty email or pawwsord!');\r\n        };\r\n        setAlertMessage('');\r\n        let response = await IdentityService.Register('account/register', registerData);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            appState.jwt = response.data!.token;\r\n            appState.firstName = response.data!.firstname;\r\n            appState.lastName = response.data!.lastname;\r\n            appState.setAuthInfo(response.data!.token, response.data!.firstname, response.data!.lastname);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { appState.jwt !== null ? <Redirect to=\"/\" /> : null}\r\n            <h1>Register</h1>\r\n            <form onSubmit={(e) => registerClicked(e.nativeEvent)}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Email\">Email</label>\r\n                                <input value={registerData.email} onChange={e => setRegisterData({ ...registerData, email: e.target.value })} className=\"form-control\" type=\"email\" id=\"Input_Email\" name=\"Input.Email\" placeholder=\"user@example.com\"  autoComplete=\"username\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Password\">Password</label>\r\n                                <input value={registerData.password} onChange={e => setRegisterData({ ...registerData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" placeholder=\"Input your current password...\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Firstname\">First Name</label>\r\n                                <input value={registerData.firstname} onChange={e => setRegisterData({ ...registerData, firstname: e.target.value })} className=\"form-control\" type=\"firstname\" id=\"Input_Firstname\" name=\"Input.Firstname\" placeholder=\"Input your first name...\" autoComplete=\"firstname\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Lastname\">Last Name</label>\r\n                                <input value={registerData.lastname} onChange={e => setRegisterData({ ...registerData, lastname: e.target.value })} className=\"form-control\" type=\"lastname\" id=\"Input_Lastname\" name=\"Input.Lastname\" placeholder=\"Input your last name...\" autoComplete=\"lastname\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Userlevel\">User Level</label>\r\n                                <input value={registerData.userlevel} onChange={e => setRegisterData({ ...registerData, userlevel: e.target.value })} className=\"form-control\" type=\"userlevel\" id=\"Input_Userlevel\" name=\"Input.Userlevel\" placeholder=\"Input your user level...\" autoComplete=\"userlevel\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => registerClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","const Page404 = () => {\r\n    return (\r\n        <div>Page not found - 404!</div>\r\n    );\r\n}\r\n\r\nexport default Page404;\r\n","import { useState } from \"react\";\r\n\r\ninterface IFormValues {\r\n    input: string;\r\n    checkbox: boolean;\r\n    radio: string;\r\n    textarea: string;\r\n    select: string;\r\n}\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"formInputText\">Text</label>\r\n                <input value={props.values.input} onChange={(e) => props.handleChange(e.target)} type=\"text\" className=\"form-control\" id=\"formInputText\" />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n                <input checked={props.values.checkbox} onChange={(e) => props.handleChange(e.target)} type=\"checkbox\" className=\"form-check-input\" id=\"formInputCheckBox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">CheckBox</label>\r\n            </div>\r\n\r\n            <div className=\"form-check\">\r\n                <input checked={props.values.radio === 'checked1'} onChange={(e) => props.handleChange(e.target)} className=\"form-check-input\" type=\"radio\" id=\"formInputRadio1\" value=\"checked1\" />\r\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio1\">\r\n                    Radio 1\r\n                </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <input checked={props.values.radio === 'checked2'} onChange={(e) => props.handleChange(e.target)} className=\"form-check-input\" type=\"radio\"id=\"formInputRadio2\" value=\"checked2\" />\r\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio2\">\r\n                    Radio 2\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"formTextArea\">Textarea</label>\r\n                <textarea value={props.values.textarea} onChange={(e) => props.handleChange(e.target)} className=\"form-control\" id=\"formTextArea\" rows={3}></textarea>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"formSelect\">Example select</label>\r\n                <select value={props.values.select} onChange={(e) => props.handleChange(e.target)} className=\"form-control\" id=\"formSelect\">\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    );\r\n}\r\nconst initialFormValues: IFormValues = {\r\n    input: '',\r\n    checkbox: false,\r\n    radio: '',\r\n    textarea: '',\r\n    select: '',\r\n};\r\n\r\n\r\n\r\nconst PageForm = () => {\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        // todo: update form value\r\n        console.log(target);\r\n\r\n        if (target.id === 'formInputText') {\r\n            setFormValues({ ...formValues, input: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'formInputCheckBox') {\r\n            setFormValues({ ...formValues, checkbox: (target as HTMLInputElement).checked });\r\n            return;\r\n        }\r\n        if (target.id === 'formInputRadio1') {\r\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\r\n            return;\r\n        }\r\n        if (target.id === 'formInputRadio2') {\r\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\r\n            return;\r\n        }\r\n        if (target.id === 'formTextArea') {\r\n            setFormValues({ ...formValues, textarea: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'formSelect') {\r\n            setFormValues({ ...formValues, select: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default PageForm;\r\n","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport ProductTypeCreate from './containers/product-types/ProductTypeCreate';\nimport ProductTypeCreate1 from './containers/product-types/ProductTypeCreate1';\nimport ProductTypeDelete from './containers/product-types/ProductTypeDelete';\nimport ProductTypeDetails from './containers/product-types/ProductTypeDetails';\nimport ProductTypeEdit from './containers/product-types/ProductTypeEdit';\nimport ProductTypeIndex from './containers/product-types/ProductTypeIndex';\n\nimport PaymentTypeCreate from './containers/payment-types/PaymentTypeCreate';\nimport PaymentTypeDelete from './containers/payment-types/PaymentTypeDelete';\nimport PaymentTypeDetails from './containers/payment-types/PaymentTypeDetails';\nimport PaymentTypeEdit from './containers/payment-types/PaymentTypeEdit';\nimport PaymentTypeIndex from './containers/payment-types/PaymentTypeIndex';\n\nimport PersonCreate from './containers/persons/PersonCreate';\nimport PersonDelete from './containers/persons/PersonDelete';\nimport PersonDetails from './containers/persons/PersonDetails';\nimport PersonEdit from './containers/persons/PersonEdit';\nimport PersonIndex from './containers/persons/PersonIndex';\n\nimport HomeIndex from './containers/home/HomeIndex';\nimport Login from './containers/identity/Login';\nimport Register from './containers/identity/Register';\nimport Page404 from './containers/Page404';\nimport PageForm from './containers/PageForm';\nimport { AppContextProvider, initialAppState } from './context/AppContext';\n\nfunction App() {\n    const setAuthInfo = (jwt: string | null, firstName: string, lastName: string): void => {\n        setAppState({...appState, jwt, firstName, lastName});\n    }\n\n    const [appState, setAppState] = useState({...initialAppState, setAuthInfo });\n\n    return (\n        <>\n            <AppContextProvider value={appState} >\n                <Header />\n                <div className=\"container\">\n                    <main role=\"main\" className=\"pb-3\">\n                        <Switch>\n                            <Route exact path=\"/\" component={HomeIndex} />\n\n                            <Route path=\"/form\" component={PageForm} />\n\n                            <Route path=\"/identity/login\" component={Login} />\n                            <Route path=\"/identity/register\" component={Register} />\n\n                            <Route path=\"/producttypes/create\" component={ProductTypeCreate1} />\n                            <Route path=\"/producttypes/edit/:id\" component={ProductTypeEdit} />\n                            <Route path=\"/producttypes/delete/:id\" component={ProductTypeDelete} />\n                            <Route path=\"/producttypes/:id\" component={ProductTypeDetails} />\n                            <Route path=\"/producttypes\" component={ProductTypeIndex} />\n\n                            <Route path=\"/paymenttypes/create\" component={PaymentTypeCreate} />\n                            <Route path=\"/paymenttypes/edit/:id\" component={PaymentTypeEdit} />\n                            <Route path=\"/paymenttypes/delete/:id\" component={PaymentTypeDelete} />\n                            <Route path=\"/paymenttypes/:id\" component={PaymentTypeDetails} />\n                            <Route path=\"/paymenttypes\" component={PaymentTypeIndex} />\n\n                            <Route path=\"/persons/create\" component={PersonCreate} />\n                            <Route path=\"/persons/edit/:id\" component={PersonEdit} />\n                            <Route path=\"/persons/delete/:id\" component={PersonDelete} />\n                            <Route path=\"/persons/:id\" component={PersonDetails} />\n                            <Route path=\"/persons\" component={PersonIndex} />\n\n                            <Route component={Page404} />\n                        </Switch>\n                    </main>\n                </div>\n                <Footer />\n            </AppContextProvider>\n        </>\n    );\n}\n\nexport default App;\n\n","import 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport './assets/site.css'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n"],"sourceRoot":""}